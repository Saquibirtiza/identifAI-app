{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/image.png"],"names":["Logo","className","options","max","style","height","width","paddingTop","alt","src","eye","Navigation","onRouteChange","isSignedIn","display","flexdirection","justifyContent","onClick","ImageLinkForm","onInputChange","onButtonSubmit","type","placeholder","onChange","Rank","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","displayText","textTransform","this","htmlFor","React","Component","Register","onNameChange","FaceRecognition","imageUrl","box","undefined","topRow","leftCol","map","index","top","right","rightCol","bottom","bottomRow","left","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","i","leftColBox","rightColBox","topRowBox","bottomRowBox","image","document","getElementById","Number","outputs","regions","length","clarifaiFace","region_info","bounding_box","push","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","console","log","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.72e11726.chunk.js","sourcesContent":["import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport eye from './image.png';\r\n \r\nconst Logo = () => {\r\n    return (\r\n      <div>\r\n        <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                <img style={{paddingTop: '5px'}} alt='logo' src={eye} />\r\n            </div>\r\n        </Tilt>\r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../Logo/Logo';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn){\r\n        return (\r\n            <div>\r\n                <nav style={{display: 'flex', flexdirection: 'row', justifyContent: 'space-around'}}>\r\n                    <div style={{display: 'flex',  flexdirection: 'column'}}>\r\n                        <Logo />\r\n                        <p className='f3 link white pa3'>identifAI</p>\r\n                    </div>\r\n                    <div style={{display: 'flex',  flexdirection: 'column'}}>\r\n                        <p onClick={() => onRouteChange('signout')} className='f3 link dim white pa3 pointer'>Sign Out</p>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div>\r\n                <nav style={{display: 'flex', flexdirection: 'row', justifyContent: 'space-around'}}>\r\n                    <div style={{display: 'flex',  flexdirection: 'column', justifyContent: 'flex-start'}}>\r\n                        <Logo />\r\n                        <p className='f3 link white pa3'>identifAI</p>\r\n                    </div>\r\n                    <div style={{display: 'flex',  flexdirection: 'column', justifyContent: 'flex-end'}}>\r\n                        <div >\r\n                            <p onClick={() => onRouteChange('signin')} className='f3 link dim white pa3 pointer'>Sign In</p>\r\n                        </div>\r\n                        <div >\r\n                            <p onClick={() => onRouteChange('register')} className='f3 link dim white pa3 pointer'>Register</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        \r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f4 white'>\r\n                {'This Magic Eye can find faces in your images. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='center form pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' placeholder=\"Place image URL here\" onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-black' onClick={onButtonSubmit}> Detect </button>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm","import React from 'react';\r\n \r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n      <div>\r\n        <div className='white f3'>\r\n            {`${name}, your current entry count is...`}\r\n        </div>\r\n        <div className='white f1'>\r\n            {entries}\r\n        </div>\r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n \r\nclass Signin extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail : '',\r\n            signInPassword: '',\r\n            displayText: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://rocky-savannah-92463.herokuapp.com/signin',{\r\n            method:'post',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id){\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home');\r\n            }\r\n            else{\r\n                this.setState({displayText: user})\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        // const {onRouteChange} = this.props;\r\n        return (\r\n            <article className=\"br3 ba shadow-5 b--gray-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 white mh0\">Sign In</legend>\r\n                            <label className=\"lh-copy white f5\" style = {{textTransform: \"uppercase\"}} >{this.state.displayText}</label>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input onClick = {this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba white b--white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n \r\nclass Register extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email : '',\r\n            password: '',\r\n            name: '',\r\n            displayText: ''\r\n        }\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://rocky-savannah-92463.herokuapp.com/register',{\r\n            method:'post',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id){\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home');\r\n            }\r\n            else{\r\n                this.setState({displayText: user})\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article className=\"br3 ba shadow-5 b--gray-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 white mh0\">Register</legend>\r\n                            <label className=\"lh-copy white f5\" style = {{textTransform: \"uppercase\"}} >{this.state.displayText}</label>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"name\">Name</label>\r\n                                <input onChange = {this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange = {this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange = {this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                            </div>\r\n                            {/* <label className=\"pa0 ma0 lh-copy f6 white pointer\"><input type=\"checkbox\"/> Remember me</label> */}\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input onClick = {this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba white b--white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {    \r\n    return (\r\n        <div className='center ma pa3'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n                {box.topRow !== undefined &&\r\n                    <div>\r\n                        {box.leftCol.map((name,index) => (\r\n                            <div\r\n                                className= 'bounding-box'\r\n                                style={{top: box.topRow[index], right: box.rightCol[index], bottom: box.bottomRow[index], left: box.leftCol[index]}}\r\n                            >\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default FaceRecognition","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation'; \nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'; \nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin' ,\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''      \n  }\n }\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined \n    }})\n  }\n\n  componentDidMount(){\n    fetch('https://rocky-savannah-92463.herokuapp.com/')\n    .then(response => response.json())\n    .then(console.log)\n  }\n\n\n  calculateFaceLocation = (data) => {\n    // console.log(data)\n    var i;\n    let leftColBox = [];\n    let rightColBox = [];\n    let topRowBox = [];\n    let bottomRowBox = [];\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n\n    for (i = 0; i < data.outputs[0].data.regions.length; i++) {\n      const clarifaiFace = data.outputs[0].data.regions[i].region_info.bounding_box;\n      leftColBox.push(clarifaiFace.left_col * width);\n      topRowBox.push(clarifaiFace.top_row * height);\n      rightColBox.push(width - (clarifaiFace.right_col * width));\n      bottomRowBox.push(height - (clarifaiFace.bottom_row * height));\n    }\n    return {\n      leftCol: leftColBox,\n      topRow: topRowBox,\n      rightCol: rightColBox,\n      bottomRow: bottomRowBox\n    }\n  }\n\n  displayFaceBox = (box) => {\n    // console.log(box)\n    this.setState({box: box});\n  }\n  \n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  } \n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://rocky-savannah-92463.herokuapp.com/imageurl',{\n      method:'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n          input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response){\n        fetch('https://rocky-savannah-92463.herokuapp.com/image',{\n          method:'put',\n          headers: {'Content-type': 'application/json'},\n          body: JSON.stringify({\n              id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState)\n      this.setState({route: 'signin'});\n    }\n    else if (route === 'home'){\n      this.setState({isSignedIn: true})\n      this.setState({route: route});\n    }\n    else{\n      this.setState({route: route});\n    }\n  }  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home'\n          ? <div>\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n            </ div>\n          : ( this.state.route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image.b37dc6e4.png\";"],"sourceRoot":""}