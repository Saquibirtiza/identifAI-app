{"version":3,"sources":["components/Logo/Logo.js","components/Navigation/Navigation.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","components/FaceRecognition/FaceRecognition.js","App.js","serviceWorker.js","index.js","components/Logo/image.png"],"names":["Logo","className","options","max","style","height","width","paddingTop","alt","src","eye","Navigation","onRouteChange","isSignedIn","display","flexdirection","justifyContent","onClick","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","id","loadUser","this","htmlFor","href","React","Component","Register","onNameChange","FaceRecognition","imageUrl","box","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","particlesOptions","particles","number","density","enable","value_area","initialState","input","route","joined","App","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","console","log","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.f59ed3d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport Tilt from 'react-tilt';\r\nimport eye from './image.png';\r\n \r\nconst Logo = () => {\r\n    return (\r\n      <div>\r\n        <Tilt className=\"Tilt\" options={{ max : 25 }} style={{ height: 150, width: 150 }} >\r\n            <div className=\"Tilt-inner pa3\">\r\n                <img style={{paddingTop: '5px'}} alt='logo' src={eye} />\r\n            </div>\r\n        </Tilt>\r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport Logo from '../Logo/Logo';\r\n\r\nconst Navigation = ({onRouteChange, isSignedIn}) => {\r\n    if(isSignedIn){\r\n        return (\r\n            <div>\r\n                <nav style={{display: 'flex', flexdirection: 'row', justifyContent: 'space-around'}}>\r\n                    <div style={{display: 'flex',  flexdirection: 'column'}}>\r\n                        <Logo />\r\n                        <p className='f3 link white pa3'>identifAI</p>\r\n                    </div>\r\n                    <div style={{display: 'flex',  flexdirection: 'column'}}>\r\n                        <p onClick={() => onRouteChange('signout')} className='f3 link dim white pa3 pointer'>Sign Out</p>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }else{\r\n        return(\r\n            <div>\r\n                <nav style={{display: 'flex', flexdirection: 'row', justifyContent: 'space-around'}}>\r\n                    <div style={{display: 'flex',  flexdirection: 'column', justifyContent: 'flex-start'}}>\r\n                        <Logo />\r\n                        <p className='f3 link white pa3'>identifAI</p>\r\n                    </div>\r\n                    <div style={{display: 'flex',  flexdirection: 'column', justifyContent: 'flex-end'}}>\r\n                        <div >\r\n                            <p onClick={() => onRouteChange('signin')} className='f3 link dim white pa3 pointer'>Sign In</p>\r\n                        </div>\r\n                        <div >\r\n                            <p onClick={() => onRouteChange('register')} className='f3 link dim white pa3 pointer'>Register</p>\r\n                        </div>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n        \r\n        \r\n    \r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit}) => {\r\n    return (\r\n        <div>\r\n            <p className='f4 white'>\r\n                {'This Magic Eye can find faces in your images. Give it a try!'}\r\n            </p>\r\n            <div className='center'>\r\n                <div className='center form pa4 br3 shadow-5'>\r\n                    <input className='f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button className='w-30 grow f4 link ph3 pv2 dib white bg-black' onClick={onButtonSubmit}> Detect </button>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageLinkForm","import React from 'react';\r\n \r\nconst Rank = ({name, entries}) => {\r\n    return (\r\n      <div>\r\n        <div className='white f3'>\r\n            {`${name}, your current entry count is...`}\r\n        </div>\r\n        <div className='white f1'>\r\n            {entries}\r\n        </div>\r\n      </div>  \r\n    );\r\n}\r\n\r\nexport default Rank;","import React from 'react';\r\n \r\nclass Signin extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            signInEmail : '',\r\n            signInPassword: ''\r\n        }\r\n    }\r\n    onEmailChange = (event) => {\r\n        this.setState({signInEmail: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({signInPassword: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://rocky-savannah-92463.herokuapp.com/signin',{\r\n            method:'post',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.signInEmail,\r\n                password: this.state.signInPassword\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id){\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {onRouteChange} = this.props;\r\n        return (\r\n            <article className=\"br3 ba shadow-5 b--gray-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 white mh0\">Sign In</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange={this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange={this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                            </div>\r\n                            {/* <label className=\"pa0 ma0 lh-copy f6 white pointer\"><input type=\"checkbox\"/> Remember me</label> */}\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input onClick = {this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba white b--white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Sign in\"/>\r\n                        </div>\r\n                        <div className=\"lh-copy mt3\">\r\n                            <p onClick = {() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim white db pointer\">Register</p>\r\n                            {/* <a href=\"#0\" className=\"f6 link dim white db\">Forgot your password?</a> */}\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n \r\nclass Register extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email : '',\r\n            password: '',\r\n            name: ''\r\n        }\r\n    }\r\n    onNameChange = (event) => {\r\n        this.setState({name: event.target.value})\r\n    }\r\n\r\n    onEmailChange = (event) => {\r\n        this.setState({email: event.target.value})\r\n    }\r\n\r\n    onPasswordChange = (event) => {\r\n        this.setState({password: event.target.value})\r\n    }\r\n\r\n    onSubmitSignIn = () => {\r\n        fetch('https://rocky-savannah-92463.herokuapp.com/register',{\r\n            method:'post',\r\n            headers: {'Content-type': 'application/json'},\r\n            body: JSON.stringify({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name\r\n            })\r\n        })\r\n        .then(response => response.json())\r\n        .then(user => {\r\n            if (user.id){\r\n                this.props.loadUser(user)\r\n                this.props.onRouteChange('home');\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <article className=\"br3 ba shadow-5 b--gray-10 mv4 w-100 w-50-m w-25-l mw6 center\">\r\n                <main className=\"pa4 black-80\">\r\n                    <div className=\"measure\">\r\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                            <legend className=\"f1 fw6 ph0 white mh0\">Register</legend>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"name\">Name</label>\r\n                                <input onChange = {this.onNameChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\"/>\r\n                            </div>\r\n                            <div className=\"mt3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"email-address\">Email</label>\r\n                                <input onChange = {this.onEmailChange} className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\"/>\r\n                            </div>\r\n                            <div className=\"mv3\">\r\n                                <label className=\"db fw6 lh-copy white f6\" htmlFor=\"password\">Password</label>\r\n                                <input onChange = {this.onPasswordChange} className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\"/>\r\n                            </div>\r\n                            {/* <label className=\"pa0 ma0 lh-copy f6 white pointer\"><input type=\"checkbox\"/> Remember me</label> */}\r\n                        </fieldset>\r\n                        <div className=\"\">\r\n                            <input onClick = {this.onSubmitSignIn} className=\"b ph3 pv2 input-reset ba white b--white bg-transparent grow pointer f6 dib\" type=\"submit\" value=\"Register\"/>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma pa3'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition","import React, {Component} from 'react';\nimport Particles from 'react-particles-js';\nimport Navigation from './components/Navigation/Navigation'; \nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm'; \nimport Rank from './components/Rank/Rank';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin' ,\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''      \n  }\n }\n\nclass App extends Component{\n  constructor() {\n    super();\n    this.state = initialState\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined \n    }})\n  }\n\n  componentDidMount(){\n    fetch('https://rocky-savannah-92463.herokuapp.com/')\n    .then(response => response.json())\n    .then(console.log)\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    console.log(width,height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box)\n    this.setState({box: box});\n  }\n  \n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  } \n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    fetch('https://rocky-savannah-92463.herokuapp.com/imageurl',{\n      method:'post',\n      headers: {'Content-type': 'application/json'},\n      body: JSON.stringify({\n          input: this.state.input\n      })\n    })\n    .then(response => response.json())\n    .then(response => {\n      if (response){\n        fetch('https://rocky-savannah-92463.herokuapp.com/image',{\n          method:'put',\n          headers: {'Content-type': 'application/json'},\n          body: JSON.stringify({\n              id: this.state.user.id\n          })\n        })\n        .then(response => response.json())\n        .then(count => {\n          this.setState(Object.assign(this.state.user, {entries:count}))\n        })\n        .catch(console.log)\n      }\n      this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout'){\n      this.setState(initialState)\n    }\n    else if (route === 'home'){\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }  \n\n  render() {\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n          params={particlesOptions}\n        />\n        <Navigation isSignedIn={this.state.isSignedIn} onRouteChange={this.onRouteChange}/>\n        { this.state.route === 'home'\n          \n          ? <div>\n              <Rank name={this.state.user.name} entries={this.state.user.entries}/>\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={this.state.box} imageUrl={this.state.imageUrl}/>\n            </ div>\n          : ( this.state.route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n          )\n        }\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/image.b37dc6e4.png\";"],"sourceRoot":""}